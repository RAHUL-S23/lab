import numpy as np, pandas as pd, matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.datasets import fetch_california_housing
from sklearn.metrics import r2_score

housing = fetch_california_housing()
X = pd.DataFrame(housing.data, columns=housing.feature_names)[['MedInc']]
y = housing.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
plt.figure(figsize=(10, 4))
plt.subplot(1, 2, 1)
plt.scatter(X_test, y_test, color="blue", alpha=0.5, label="Actual")
plt.plot(X_test, y_pred, color="red", label="Predicted")
plt.xlabel("Median Income")
plt.ylabel("House Price")
plt.title(f"California Housing\nLinear Regression (R²={r2_score(y_test, y_pred):.2f})")
plt.legend()

auto = pd.read_csv(r'C:\Users\Admin\Documents\6th sem VTU\BCS602\ml-lab\lab7\auto-mpg.csv')
auto = auto.dropna()
auto = auto[auto['horsepower'] != '?']
auto['horsepower'] = auto['horsepower'].astype(float)

X = auto[['horsepower']]
y = auto['mpg']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

poly = PolynomialFeatures(degree=2)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

poly_model = LinearRegression()
poly_model.fit(X_train_poly, y_train)
y_pred_poly = poly_model.predict(X_test_poly)

plt.subplot(1, 2, 2)
plt.scatter(X_test, y_test, color="blue", alpha=0.5, label="Actual")
plt.scatter(X_test, y_pred_poly, color="red", alpha=0.5, label="Predicted")
plt.xlabel("Horsepower")
plt.ylabel("MPG")
plt.title(f"Auto MPG\nPolynomial Regression (R²={r2_score(y_test, y_pred_poly):.2f})")
plt.legend()

plt.tight_layout()
plt.show()
